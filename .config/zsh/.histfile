nvim todo.txt
source .config/zsh/.zshrc
paru -R zsh-autosuggestions-git
paru zsh-autosuggestions
paru -R zsh-autosuggestions-git
paru -R zsh-completions-git
source .config/zsh/.zshrc
source .config/zsh/.zshrc
man zshoptions
paru zsh-autosuggestions-git
cd /share
which zsh-autosuggestions
which zsh-autosuggestions-git
paru -R zsh-autosuggestions-git
git clone https://github.com/zsh-users/zsh-autosuggestions ~/.config/zsh/zsh-autosuggestions
source .config/zsh/.zshrc
source .config/zsh/.zshrc
nvim todo.txt
echo hi
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git .config/zsh/zsh-syntax-highlighting
source .config/zsh/.zshrc
echo hello
echo "hi"
nvim todo.txt
man bindkey
source .config/zsh/.zshrc
source .config/zsh/.zshrc
source .config/zsh/.zshrc
source .config/zsh/.zshrc
source .config/zsh/.zshrc
source .config/zsh/.zshrc
source .config/zsh/.zshrc
nvim todo.txt
nvim todo.txt
cd .config/zsh/
ls
ls -a
git clone https://github.com/dracula/zsh-syntax-highlighting.git dracula
cd dracula
ls
mv zsh-syntax-highlighting.sh ..
cd ..
ls
mv zsh-syntax-highlighting.sh zsh-syntax-highlighting-dracula.sh
rm -rf dracula
ls
echo helloooooo
ls -a 
ls -a
echo hi
ls -a
echo hi
reboot
nvim todo.txt
paru -Syu
nmcli -v
NetworkManager -v
NetworkManager -v
NetworkManager --version
.config/polybar/launch.sh
nvim todo.txt
nvim todo.txt
exa
nvim todo.txt
exa --icons
exa --icons --grid
exa --icons --grid -R
exa --icons --grid -x
exa --icons --all
exa --icons --all -x
exa --icons --all -across
exa --icons --all --across
exa --icons --all --across --group-directories-first
exa --all --icons --lonng
exa --all --icons --long
cd .config/polybar/
ls
exa --icons --all --tree
cd
exa --icons --all --tree
exa --icons --all --tree 2
exa --icons --all --tree --level 2
exa --icons --all --tree --level 3
ls
ll
ls
ll
tree
nvim todo.txt
nvim todo.txt
config status
config add .config/zsh
config status
config add .xinitrc
config remove .zshrc
config add .zshrc
config status
config commit -m "Update zsh to fish-like completion and add exe"
config push
nvim .config/zsh/.zshrc
nvim todo.txt
paru exa
paru -S exa
nvim .config/zsh/.zshrc
nvim todo.txt
nvim .config/zsh/.zshrc
reboot

bspc query -M --names
bspc monitor eDP-1 -d LOL
bspc monitor eDP-1 -d 1 2 3 4 5
xrandr --output HDMI --mode 1920x1080
xrandr
xrandr --output HDMI-1 --mode 1920x1080
hdmi
reboot

hdmi
cmatrix
nvim .config/sxhkd/sxhkdrc
nvim todo.txt
xrandr
nvim .config/zsh/zsh-syntax-highlighting-dracula.sh
nvim .config/zsh/.zshrc
nvim todo.txt
ll
ls
cd .idlerc
ls
ll
cd ..
hdmi
nmcli device wifi list
nmcli dev wifi connect Imperial-WPA bssid dm1920 password Dinidow001
nmcli dev wifi connect Imperial-WPA password Dinidow001
nmtui
nmcli dev wifi list
nmcli connection add \\
type wifi con-name "Imperial-WPA" ifname wlp3s0 ssid "Imperial-WPA" -- \\
wifi-sec.key-mgmt wpa-eap 802-1x.eap tls 802-1x.identity "dm1920" \\
802-1x.ca-cert ~/ca.pem 802-1x.client-cert ~/cert.pem \\
802-1x.private-key-password "Dinidow001" 802-1x.private-key ~/key.pem
nmcli connection add \\
type wifi con-name "Imperial-WPA" ifname wlp0s20f3 ssid "Imperial-WPA" -- \\
wifi-sec.key-mgmt wpa-eap 802-1x.eap tls 802-1x.identity "dm1920" \\
802-1x.ca-cert ~/ca.pem 802-1x.client-cert ~/cert.pem \\
802-1x.private-key-password "Dinidow001" 802-1x.private-key ~/key.pem
nmcli connection add \\
type wifi con-name "Imperial-WPA" ifname wlp0s20f3 ssid "Imperial-WPA" -- \\
wifi-sec.key-mgmt wpa-eap 802-1x.eap tls 802-1x.identity "dm1920" \\
802-1x.ca-cert ~/ca.pem 802-1x.client-cert ~/cert.pem \\
802-1x.private-key-password "Dinidow001" 802-1x.private-key ~/key.pem
nmcli connection add \\
type wifi con-name "Imperial-WPA" ifname wlp0s20f3 ssid "Imperial-WPA" -- \\
wifi-sec.key-mgmt wpa-eap 802-1x.eap ttls \\
802-1x.phase2-auth mschapv2 802-1x.identity "dm1920"
nmcli list
nmcli dev wifi list
nmcli dev wifi connect Imperial-WPA --ask
nmcli connection list
nmcli connection add \\
type wifi con-name "Arch-Imperial" ifname wlp0s20f3 ssid "Imperial-WPA" -- \\
wifi-sec.key-mgmt wpa-eap 802-1x.eap ttls \\
802-1x.phase2-auth mschapv2 802-1x.identity "dm1920"
nmcli dev wifi list
nmcli connection
nmcli connection delete Arch-Imperial
nmcli connection up Imperial-WPA --ask
nmcli --get-values GENERAL.DEVICE,GENERAL.TYPE device show
touch ca.pem
touch cert.pem
nmcli --get-values GENERAL.DEVICE,GENERAL.TYPE device show
nmcli connection
nmcli dev wifi list
nvim .config/polybar/scripts/network.sh
obsidian
nvim todo
nvim todo.txt
paru obsidian
paru obsidian
paru obsidian
paru -R obsidian
paru -R obsidian-aarc64-bin
paru obsidian
paru -R obsidian-aarch64-bin
paru snap
paru -S obsidian
cd Downloads
ls
ls
ls
chmod +x Obsidian-1.4.14.AppImage
./Obsidian-1.4.14.AppImage
paru fuse
./Obsidian-1.4.14.AppImage
mv Obsidian-1.4.14.AppImage /usr/local/bin/Obsidian
sudo mv Obsidian-1.4.14.AppImage /usr/local/bin/Obsidian
ls
obsidian
cd /usr/local/bin
ls
./Obsidian
ls
modprobe fuse Obsidian
./Obsidian
mv Obsidian Obsidian.AppImage
sudo mv Obsidian Obsidian.AppImage
./Obsidian.AppImage
paru obsidian
ls
ls
pwd
mv Obsidian.AppImage ~/.local/bin/Obsidian.AppImage
mv Obsidian.AppImage /usr/bin/obsidian
sudo mv Obsidian.AppImage /usr/bin/obsidian
ls
ls -a
cd /usr/bin
ls
obsidian
cd ~
cd /
cd
cd .config/zsh/
ls
nvim .zshrc
reboot
obsidian
cd .config/sxhkd/
ls
nvim sxhkdrc
rofi -show drun
cd /usr/bin
sudo rm -rf obsidian
cd
cd .config/zsh/
nvim .zshrc
obsidian
paru -Syu
reboot
obsidian
cd Downloads
mv Obsidian-1.4.14.AppImage /usr/bin/obsidian
chmod +x Obsidian-1.4.14.AppImage
sudo mv Obsidian-1.4.14.AppImage /usr/bin/obsidian
obsidian
rofi -show combi -combi-modi "window,drun,ssh" -modi combi
cd
cd .local/share/applications
cd .local/share
ls
mkdir applications
cd applications
touch obsidian.desktop
nvim obsidian.desktop
nvim obsidian.desktop
mv ~/Downloads/obsidian.jpg obsidian.jpg
ls
nvim .local/share/applications/obsidian.desktop
cd .local/share
rm -rf applications/
cd /usr/bin
ls
rm -rf obsidian
sudo rm -rf obsidian
paru obsidian
paru obsidian
ping www.youtube.com
ping youtube.com
ping https://www.youtube.com
paru vscode
paru vscode
hdmi
hdmi
hdmi
xrandr --output HDMI-1 --mode 1280x720
hdmi
hdmi
nvim .config/zsh/.zshrc
cd Programming/haskell/
ls
cd hello_world/
ls
nvim foo.hs
cd Programming/haskell/hello_world/
ghci foo.hs
. ./.config/polybar/launch.sh
. ./.config/polybar/launch.sh
. ./.config/polybar/launch.sh
. ./.config/polybar/launch.sh
\:q
nvim .config/bspwm/bspwmrc
nvim .config/polybar/modules.ini
hdmi
hdmi
neofetch
cd foo/
cd ..
ls
cd test/
ls
cd foo/
ls
ls
cd bar/
ls
cd
nvim todo.txt
vim
cd Programming/neurodynamics/
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
python3 ex1.py
paru python
paru python3
cd Programming
ls
mkdir python
mkdir neurodynamics
cd neurodynamics
touch ex1.py
nvim ex1.py
paru paint
paru paint
paru paint
paru -R mtpaint
nvim todo.txt
nmcli dev wifi list
nmcli dev wifi list
reboot
ping https://www.youtube.com
ping google.com
ping youtube.com
nmcli connection add \\
type wifi con-name "Arch-Imperial" ifname wlp0s20f3 ssid "Imperial-WPA" -- \\
wifi-sec.key-mgmt wpa-eap 802-1x.eap ttls \\
802-1x.phase2-auth mschapv2 802-1x.identity "dm1920"
nmcli con remove Imperial-WPA
nmcli con delete Imperial-WPA
nmcli dev wifi connect Arch-Imperial --ask
nmcli con up Arch-Imperial
nmcli con up Arch-Imperial --ask
nmcli con up Arch-Imperial --ask
xrandr --output HDMI-1 --mode 1280x720
hdmi
xrandr --output HDMI-1 --mode 1280x720
xrandr --output HDMI-1 --mode 1280x720
xrandr | grep connected | grep -v disconnected | awk '{print $1}'
xrandr --output HDMI-1 --mode 1280x720
xrandr
xrandr --output HDMI-1 --mode 1920x1080
xrandr --addmode VGA1 1920x1080
xrandr
xrandr --addmode HDMI-1 1920x1080
xrandr --output HDMI-1 --mode 1920x1080
xrandr --output HDMI-1 --mode 1920x1080
xrandr --output HDMI-1 --mode 1280x720
cd Programming/haskell/hello_world/
ghci foo.hs
cd Programming
ls
cd haskell/
ls
ls
cd hello_world/
ls
nvim foo.hs
paru -Syu discord
paru 7zip
cd Down
cd Downloads
ls
7z 'Exercise 2.zip'
paru -R p7zip
unzip 'Exercise 2.zip'
pwd
ls
paru libreOffice
paru libreoffice
paru libreoffice-still
cd Downloads
ls
nvim environment.py
nvim animate_vehicle.py
nvim controller.py
nvim .config/polybar/scripts/network.sh
nvim todo.txt
reboot
nvim todo.txt
paru -R scrot
nvim .config/sxhkd/sxhkdrc
paru escrotum-git
paru escrotum
paru -Syu
pacman -Syu
sudo pacman -Syu
sudo pacman -S paru
paru -S paru
paru escrotum
scrot -h
escrotum -h
nvim todo.txt
nvim .config/bspwm/bspwmrc
xrandr -q
xrandr -q | grep -w connected
exit
exit
ssh 192.168.0.10
ssh zoli@192.168.0.10
ssh root@192.168.0.10
ping 192.168.0.10
curl http://192.168.0.10
ls /usr/bin/local
ls /bin
vim
ls -a
ls dotfiles
cat dotfiles/config
cat dotfiles/info/
ls dotfiles/info
clear
vim
ls dotfiles
cat dotfiles/config
vim
c√∂de
clear
obsidian
ls /bin 
man cat
clear
nano
tmu
tmux
exit
exit
i386
panic
clear
cd Downloads
ls
firefox 
firefox iv223.pdf
rm *
ls
rm -rf *
ls
ghci
cd Programming/haskell/hello_world/
ghci foo.hs
cd Programming/haskell/hello_world/
ls
vim foo.hs
cd Downloads
ls
cd Downloads
ls
rm *
hdmi
cd Programming/haskell/hello_world
ghci foo.hs
cd Programming/haskell/hello_world/
nvim foo.hs
ghci
hdmi
cd Programming/haskell/hello_world/
ghci foo.hs
cd Programming/haskell/hello_world/
nvim foo.hs
paru code
paru -R code
paru vscode
paru -R vscode
paru -R code
code
paru vscode
code
cd Downloads
ls
feh network.png
paru -R vscode
paru -R code
hdmi
hdmi
hdmi
hdmi
hdim
hdmi
hdmi
xrandr -q | grep -w connected
hdmi
hdmi
xrandr --addmode VGA1 1360X1020
hdmi
hdmi
hdmi
xrandr --addmode VGA1 1360x1020_60.00
xrandr --addmode VGA1 1920x1080
xrandr --addmode eDP-1 1920x1080
hdmi
xrandr -q | grep -w connected
xrandr --addmode eDP-1 1920x1080+0+0
hdmi
cd Programming/haskell/hello_world/
nvim foo.hs
cd Programming/haskell/hello_world/
ghci foo.hs
ssh azureuser@20.77.3.164
reboot
ssh azureuser@20.77.3.164
reboot
paru -Syu
paru intellij
java --version
paru code
cd Programming
ls
mkdir kotlin
cd kotlin/
nvim foo.kt
archlinux-java status
archlinux-java set java-11-openjdk
sudo archlinux-java set java-11-openjdk
export _JAVA_AWT_WM_NONREPARENTING=1
paru -R intellij-idea-community-edition
sudo snap install intellij-idea-community --classic
paru snap
git clone https://aur.archlinux.org/snapd.git\
cd snapd\
makepkg -si
sudo systemctl enable --now snapd.socket
sudo snap install intellij-idea-community --classic
sudo systemctl disable --now snapd.socket
makepkg -R
cd ..
rm -rf snapd/
ls
paru intellij
paru -R intellij-idea-community-edition
paru kotlin
paru kotlin-compiler
paru kotlin
cd Programming/kotlin/
ls
kotlinc foo.kt -include-runtime -d foo.jar
java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
paru -R kotlin
paru kotlin
hdmi
cd Downloads
ls
unzip 'Exercise 5.zip'
firefox Exercise\ 5.pdf
cat iz_ping.py
cd Downloads
ls
cat iz_ping.py
ls
unzip 'Exercise 2 - Solutions(1).zip'
cat iznetwork.py
cd Programming
ls
cd python
ls
cd Downloads
ls
unzip Coursework\ 2\ Files.zip cw2
mkdir cw2
unzip Coursework\ 2\ Files.zip cw2
rm -rf cw2
unzip Coursework\ 2\ Files.zip
mv utils.py coursework2.ipynb ../Programming/py
mv utils.py coursework2.ipynb ../Programming/python
paru ipykernel
paru -Syu
paru ipykernel
paru ipykernel
mkdir .config/pip
pip install --upgrade ipython
paru pip
python -m ensurepip --upgrade
python -m pip install --upgrade pip
paru python3-pip
paru python-pip
pip install --upgrade ipython
vim .config/pip/pip.conf
pip install --upgrade ipython
paru -S code-features
hdmi
hdmi
config status
config add .config/zsh
config add .config/sxhkd/sxhkdrc
config add .config/polybar/scripts/network.sh
config commit -m "small changes"
config push
ls
ls
cd Zettelcasten
ls
git init
git add *
git commit -m "First commit"
git branch -m main
git remote add origin git@github.com:darida12321/Notes.git\
git push -u origin main
cd ~
ls
ls
cd Downloads
ls
nmtui
nmtui
nmtui
nmtui
nmtui connect
alacritty -e "nmtui"
alacritty -e "nmtui connect"
nmtui connect
.config/polybar/launch.sh
alacritty -e bash -c 'nmtui connect'
alacritty -e zsh -c 'nmtui connect'
alacritty -e bash -c '(cat ~/.cache/wal/sequences &) && nmtui connect'
arecord -l
paru arecord
timedatectl list-timezones
sudo timedatectl set-timezone Europe/Budapest
cd .config/polybar/
ls
vim modules.ini
vim scripts/network.sh
cd .config/polybar/
ls
vim modules.ini
cd ../sxhkd/
ls
vim sxhkdrc
vim todo.txt
man nmtui
nmtui -v
nmtui -h
man nmtui
nmtui edit
nmtui connect
nvim todo.txt
cd .config/
mkdir nvim
cd nvim
config add .config/nvim
config add .
config status
config add .
config status
nvim init.lua
config add init.lua
config add ../zsh/.histfile
config add ../polybar/scripts/network.sh
config status
nvim
vim
paru steam
paru -S steam
paru steam
cd Downloads
ls
./steam_latest.deb
sudo chmod +x steam_latest.deb
./steam_latest.deb
sudo dpkg -i steam_latest.deb
paru dpkg
sudo dpkg -i steam_latest.deb
dpkg -v
dpkg --version
paru -R dpkg
paru debtap
debtap steam_latest.deb
sudo debtap -u
debtap steam_latest.deb
ls
sudo paru -U steam-launcher-1:1.0.0.78-1-any.pkg.tar.zst
sudo paru -U steam-launcher-1:1.0.0.78-1-any.pkg.tar.zst
rm -rf *
ls
cd ..
alacritty migrate
paru -R debtap
./.config/polybar/launch.sh
discord
paru -Syu
discord
cd Downloads
ls
sudo debtap -v steam_latest.deb
ls
sudo debtap steam_latest.deb
sudo paru -U steam-launcher-1:1.0.0.78-1-any.pkg.tar.zst
sudo pacman -S steam
pacman steam
paru flatpack
paru flatpak
paru -S flatpak
paru -Syu
paru steam
paru -S steam
paru -S flatpak
flatpak -v
flatpak --version
flatpak install flathub com.valvesoftware.Steam
flatpak run com.valvesoftware.Steam
reboot
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
nvim todo.txt
cd Programming/haskell
ls
cd hello_world/
ls
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
ls
ls -a
ls -a
vim foo.hs
ls -a
vim foo.hs
git init
git add *
vim foo.hs
ls
rm -rf .git
ls
vim foo.hs
cd ~/.config/nvim/
ls
nvim foo.lua
nvim foo.lua
nvim foo.lua
nvim foo.lua
nvim foo.lua
nvim foo.lua
nvim foo.lua
nvim foo.lua
nvim foo.lua
nvim foo.lua
nvim foo.lua
ls
ls
rm foo.lua
touch settings.lua
touch plugins.lua configure.lua lsp.lua
ls
vim settings.lua
vim settings.lua
cd ~/Programming/haskell/hello_world/
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
vim foo.hs
cd .config/nvim/
ls
vim init.lua
vim init.lua
vim init.lua
ls
mkdir lua
mv configure.lua lsp.lua plugins.lua settings.lua lua/
ls
ls lua/
vim init.lua
vim init.lua
vim init.lua
vim init.lua
vim init.lua
vim lua/plugins.lua
vim lua/settings.lua
vim lua/settings.lua
vim lua/settings.lua
paru -Syu
cd Programming/haskell
ls
git clone https://github.com/diagrams/active.git
ls
cd active/
ls
cd paper
ls
cd haskell2020/
ls
ls
./build.sh
cat build.sh
paru stack
cat build.sh
stack --version
./build.sh
ls
cat build.sh
cat active.lhs
./build.sh
paru lhs2Tex
paru lhs2Tex
paru lhs2Tex
paru regex
./build.sh
cat build.sh
ls
hdmi
hdmi
timedatectl list-timezones
timedatectl set-timezone Europe/London
paru -Syu
ls
cd Programming/haskell
ls
cd hello_world/
ls
vim foo.hs
cd ~
cd .config/nvim/
ls
cd lua/
ls
vim lsp.lua
vim plugins.lua
vim lsp.lua
hdmi
cd Programming/kotlin/
vim foo.kt
cd Programming/kotlin/
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
kotlinc foo.kt -include-runtime -d foo.jar && java -jar foo.jar
gcc hello.cpp
gcc hello.cpp
gcc hello.cpp
gcc hello.cpp
gcc hello.cpp
gcc hello.cpp -lstdc++
ls
./a.out
cd .ssh/
ls
cat id_rsa.pub
cd Programming/Fuzzing_11
ls
ls
cd Programming/Fuzzing_11
vim .gitignore
git remove fuzzer/main
rm fuzzer/main
ls
ls inputs
ls
ls solvers/
ls solvers/solver1
git status
git add fuzzer/main fuzzer/main.cpp
ls
rm fuzz-sat
git add fuzz-sat
git add .
git status
git commit -m "Add skeleton functions to fuzzer"
git push
ls
cat build.sh
git status
git add .gitignore
git commit -m "Ignore fuzz-sat"
git push
git pull
git status
git add .
git pull
git commit -m "Finish file output function"
git pull
git config pull.rebase false
git pull
git status
git add .
git status
git restore fuzzer/main.cpp
git status
git pull
git pull
git status
git add fuzzer/main.cpp
git commit -m "Fix whitespaced in writeFile function"
git pull
cd Programming/Fuzzing_11
ls
cd solvers/solver1/
ls
git add .
git push
git pull
git commit -m "Merge master"
git push
./build.sh
./build.sh
./build.sh
ls
./fuzz-sat
ls
ls inputs
cat inputs/foo.cnf
git add .
git commit -m "Use std in std::ofstream"
git push
./build.sh && ./fuzz-sat
./build.sh && ./fuzz-sat
./build.sh && ./fuzz-sat
git statuss
git status
git add .
git commit -m "Create exec function to run terminal functions"
git push
./build.sh && ./fuzz-sat
./build.sh && ./fuzz-sat
cd solvers/solver1/
ls
cd ../..
./build.sh && ./fuzz-sat
cd solvers/solver1
ls
make ub
cd ../..
./build.sh && ./fuzz-sat
git add .
git commit -m "Call exec function on the solver"
git push
git status
git add .
git commit -m "Fix tab size"
git push
./build.sh
./build.sh
./build.sh
./build.sh
./build.sh
./build.sh
./fuzz-sat "./inputs" "./solvers/solver1/runsat.sh"
./build.sh
./fuzz-sat "./inputs" "./solvers/solver1/runsat.sh"
./build.sh
./fuzz-sat "./inputs" "./solvers/solver1/runsat.sh"
./build.sh
./fuzz-sat "./inputs" "./solvers/solver1/runsat.sh"
./build.sh
./fuzz-sat "./inputs" "./solvers/solver1/runsat.sh"
./fuzz-sat "./inputs" "./solvers/solver1/runsat.sh"
./build.sh
./fuzz-sat "./inputs" "./solvers/solver1/runsat.sh"
git add .
git push -m "Get arguments and pass it to the functions"
git push
git commit -m "Get arguments and pass it to the functions"
git pull
git commit
git config pull.rebase true
./fuzz-sat ./inputs ./solvers/solver1/runsat.sh
git pull
git status
git pull
./build.sh
./build.sh
./build.sh
./build.sh
./build.sh
git add .
git commit -m "Select strategy based on intput rather than round robin"
git push
git config pull.rebase false
ls
cd Zettelcasten
ls
git add .
git commit -m "New notes"
git push
paru -Syu
reboot
paru -Syu
reboot
cd .config/polybar/
ls
cd scripts/
ls
cd ..
./launch.sh
reboot
cd .config/polybar/
killall -q polybar
echo $DESKTOP_SESSION
cat launch.sh
killall -q polybar
./launch.sh
vim /tmp/polybar.log
cd .config/polybar/
./launch.sh
./launch.sh
ls
grep psuedo-transparency
vim colors.ini
./launch.sh
reboot
cd .config/polybar/
./launch.sh
./launch.sh
./launch.sh
./launch.sh
killall -q polybar
reboot
cd .config/polybar/
ls
vim config.ini
vim modules.ini
vim config.ini
cd .config/polybar/
killall -q polybar
./launch.sh
./launch.sh
./launch.sh
./launch.sh
./launch.sh
./launch.sh
./launch.sh
./launch.sh
killall -q polybar
cd .config/polybar/
vim config.ini
vim modules.ini
vim config.ini
reboot
cd .config/polybar
./launch.sh
./launch.sh
./launch.sh
cd .config/polybar
vim config.ini
reboot
cd .config/polybar
vim config.ini
reboot
paru chrome
paru google
paru google-chrome
gcc -v
cd Downloads
unzip 70001-Assignment1.zip
ls
mv 70001-Assignment1 ../Programming/python/
cd ../Programming/python
ls
python3
cd Programming/python/
7z 70001-Assignment1/
paru 7zip
7z 70001-Assignment1
7z a -r 70001-Assignment1
ls
mv 70001-Assignment1.7z 70001-Assignment1.zip
cd Programming/python
ls
rm -rf 70001-Assignment1.zip
7z a -r 70001-Assignment1
ls
mv 70001-Assignment1.7z ../70001-Assignment1.zip
cd ..
ls
unzip 70001-Assignment1.zip
7z 70001-Assignment1.zip
rm -rf 70001-Assignment1.zip
cd python
ls
paru zip
ls
zip 70001-Assignment1/
zip graphics 70001-Assignment1/
ls
unzip graphics.zip
ls
paru nautilus
ls
zip -r graphics 70001-Assignment1
